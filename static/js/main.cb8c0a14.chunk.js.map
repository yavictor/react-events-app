{"version":3,"sources":["components/CitiesList.jsx","components/MonthsList.jsx","components/Fav.jsx","components/Event.jsx","components/EventsList.jsx","layout/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["CitiesList","props","cities","filterRequest","Function","prototype","useState","citiesFilter","setFilter","className","value","onChange","e","target","map","city","i","MonthsList","months","monthFilter","monthNames","month","Fav","id","changeFav","favs","onClick","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","Event","name","date","image","fav","day","split","style","backgroundImage","EventsList","events","length","event","Main","dataFromStorage","JSON","parse","localStorage","getItem","setEvents","setFav","normalizedDate","normalizeDate","Date","getMonth","eventsWithMonths","uniqueMonths","Set","sort","a","b","citiesList","uniqueCities","request","type","filteredEvents","filter","useEffect","fetch","then","response","json","data","catch","error","console","temp","setItem","stringify","App","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cb8c0a14.chunk.js","sourcesContent":["import { useState } from 'react';\n\nfunction CitiesList(props) {\n  const { cities = [], filterRequest = Function.prototype } = props;\n\n  const [citiesFilter, setFilter] = useState('');\n\n  return (\n    <select\n      className=\"input-selector\"\n      value={citiesFilter}\n      onChange={(e) => {\n        setFilter(e.target.value);\n        filterRequest(e.target.value, 'city');\n      }}\n    >\n      <option value=\"\">-</option>\n      {cities.map((city, i) => (\n        <option key={i} value={city}>\n          {city}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport { CitiesList };\n","import { useState } from 'react';\n\nfunction MonthsList(props) {\n  const { months = [], filterRequest = Function.prototype } = props;\n\n  const [monthFilter, setFilter] = useState('');\n\n  const monthNames = [\n    'January',\n    'February',\n    'March',\n    'April',\n    'May',\n    'June',\n    'July',\n    'August',\n    'September',\n    'October',\n    'November',\n    'December',\n  ];\n\n  return (\n    <select\n      className=\"input-selector\"\n      value={monthFilter}\n      onChange={(e) => {\n        setFilter(e.target.value);\n        filterRequest(e.target.value, 'month');\n      }}\n    >\n      {' '}\n      <option value=\"\">-</option>\n      {months.map((month) => (\n        <option key={month} value={month}>\n          {monthNames[month - 1]}\n        </option>\n      ))}\n    </select>\n  );\n}\n\nexport { MonthsList };\n","function Fav(props) {\n  const { id = 0, changeFav = Function.prototype, favs = {} } = props;\n\n  return (\n    <div className=\"fav-item\" onClick={() => changeFav(id)}>\n      {favs[id] ? (\n        <svg\n          width=\"16\"\n          height=\"20\"\n          viewBox=\"0 0 16 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M15 19L8 14L1 19V3C1 2.46957 1.21071 1.96086 1.58579 1.58579C1.96086 1.21071 2.46957 1 3 1H13C13.5304 1 14.0391 1.21071 14.4142 1.58579C14.7893 1.96086 15 2.46957 15 3V19Z\"\n            fill=\"white\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      ) : (\n        <svg\n          width=\"16\"\n          height=\"20\"\n          viewBox=\"0 0 16 20\"\n          fill=\"none\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n        >\n          <path\n            d=\"M15 19L8 14L1 19V3C1 2.46957 1.21071 1.96086 1.58579 1.58579C1.96086 1.21071 2.46957 1 3 1H13C13.5304 1 14.0391 1.21071 14.4142 1.58579C14.7893 1.96086 15 2.46957 15 3V19Z\"\n            stroke=\"white\"\n            strokeWidth=\"2\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n          />\n        </svg>\n      )}\n    </div>\n  );\n}\n\nexport { Fav };\n","import { Fav } from './Fav';\n\nfunction Event(props) {\n  const {\n    id,\n    name,\n    date,\n    image,\n    changeFav = Function.prototype,\n    fav = false,\n    favs = {},\n  } = props;\n\n  const day = date.split('.')[0];\n  return (\n    <div\n      id={id}\n      className=\"event-card\"\n      style={{ backgroundImage: `url(${image})` }}\n    >\n      <div className=\"top-container\">\n        <div className=\"date-box\">{day}</div>\n        <Fav id={id} changeFav={changeFav} fav={fav} favs={favs} />\n      </div>\n      <div className=\"event-name\">{name}</div>\n    </div>\n  );\n}\n\nexport { Event };\n","import { Event } from './Event';\n\nfunction EventsList(props) {\n  const { events = [], changeFav = Function.prototype, favs = {} } = props;\n\n  if (!events.length) {\n    return <h3>Sorry no events loaded</h3>;\n  }\n  return (\n    <div className=\"events\">\n      {events.map((event) => (\n        <Event key={event.id} {...event} changeFav={changeFav} favs={favs} />\n      ))}\n    </div>\n  );\n}\n\nexport { EventsList };\n","import { useState, useEffect } from 'react';\nimport { CitiesList } from '../components/CitiesList';\nimport { MonthsList } from '../components/MonthsList';\nimport { EventsList } from '../components/EventsList';\n\nconst Main = () => {\n  const dataFromStorage = JSON.parse(localStorage.getItem('favs'));\n\n  const [events, setEvents] = useState([]);\n  const [favs, setFav] = useState(dataFromStorage || {});\n\n  const normalizeDate = (date) => {\n    const [day, month, year] = date.split('.');\n    return [year, month, day];\n  };\n\n  const months = events\n    .map((event) => {\n      const normalizedDate = normalizeDate(event.date);\n      return new Date(...normalizedDate);\n    })\n    .map((date) => date.getMonth());\n\n  const changeFav = (id) => {\n    let temp = { ...favs };\n    if (favs[id] === true) {\n      temp[id] = false;\n    } else {\n      temp[id] = true;\n    }\n    setFav(temp);\n    localStorage.setItem('favs', JSON.stringify(temp));\n  };\n\n  const eventsWithMonths = events.map((event, i) => ({\n    ...event,\n    month: months[i],\n  }));\n\n  const uniqueMonths = [...new Set(months)].sort((a, b) => a - b);\n\n  const citiesList = events.map((event) => event.city);\n  const uniqueCities = [...new Set(citiesList)].sort();\n\n  const filterRequest = (request, type) => {\n    let filteredEvents = [];\n    if (type === 'month' && request !== '') {\n      filteredEvents = eventsWithMonths.filter(\n        (event) => event.month === +request\n      );\n      setEvents(filteredEvents);\n    }\n    if (type === 'city' && request !== '') {\n      filteredEvents = eventsWithMonths.filter(\n        (event) => event.city === request\n      );\n      setEvents(filteredEvents);\n    }\n  };\n\n  useEffect(() => {\n    fetch(\n      'https://raw.githubusercontent.com/xsolla/xsolla-frontend-school-2021/main/events.json'\n    )\n      .then((response) => response.json())\n      .then((data) => {\n        setEvents(data);\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n  }, []);\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">Event Listing</h1>\n      <form className=\"selectors\">\n        <label className=\"city-selector\">\n          City:\n          <CitiesList cities={uniqueCities} filterRequest={filterRequest} />\n        </label>\n        <label className=\"month-selector\">\n          Month:\n          <MonthsList months={uniqueMonths} filterRequest={filterRequest} />\n        </label>\n      </form>\n      <div className=\"events-grid\">\n        <EventsList\n          events={eventsWithMonths}\n          changeFav={changeFav}\n          favs={favs}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport { Main };\n","import { Main } from './layout/Main'\n\nfunction App() {\n  return (\n    <Main />\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}